name: Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  build-and-release:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
        shell: bash

      - name: Build with PyInstaller
        run: |
          if [ "$RUNNER_OS" = "Windows" ]; then
            pyinstaller --onefile --noconsole --icon=icon.ico --clean mcdownloader.py
          else
            pyinstaller --onefile --clean mcdownloader.py
          fi
        shell: bash

      - name: Rename binary with version from tag
        run: |
          echo "Tag is ${{ github.ref_name }}"
          if [ "$RUNNER_OS" = "Windows" ]; then
            mv dist/mcdownloader.exe dist/MinecraftVersionDownloader_${{ github.ref_name }}.exe
          else
            mv dist/mcdownloader dist/MinecraftVersionDownloader_${{ github.ref_name }}_macos
          fi
        shell: bash

      - name: Upload Windows release
        if: runner.os == 'Windows'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/MinecraftVersionDownloader_${{ github.ref_name }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS release
        if: runner.os == 'macOS'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/MinecraftVersionDownloader_${{ github.ref_name }}_macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
